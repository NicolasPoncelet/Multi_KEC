---
title: "Multi KEC report"
title-block-banner: '#446e9b'
author: "Nicolas Poncelet"
lightbox:
  match: auto
  effect: fade
  desc-position: right
  loop: false
date:  today
lang: en
format: 
  html:
    html-math-method: mathml
    html_document: default
    theme: spcacelab
    page-layout: full
    embed-resources: true
    code-tools:
      source: true
      toggle: true
    code-fold: true
    code-copy: true
    code_download: true
    toc: true
    toc-location: left
    number-sections: true
    smooth-scroll: true

---





```{r,echo=TRUE, include=FALSE}

#Nettoyage de la cache.

rm(list=ls()) 

options(dplyr.summarise.inform = FALSE)

```


```{r,package,echo=TRUE, include=FALSE}

#Chargement des packages nécessaires.

library(DT) # Tableau interactif.
library(ggplot2)
library(heatmaply) # création de heatmap interactive.
library(kableExtra) # Tableau interactif.
library(plotly) # Rend les graphes interactifs.
library(tidyverse)
library(patchwork)
library(htmltools)
```


```{r, load_raw_data}

df_reference <- read.delim("genome_report.csv",sep = "\t")

kec_df <- read.delim("KEC_run_info.csv",sep = ',')%>%
  mutate(Kmer_size_selection = paste0("In",kmer_in,"_","Ex",kmer_ex))

kec_best_runs <- read.delim("KEC_best_run.csv", sep =",")
```

```{r}
n_levels <- length(unique(kec_df$Kmer_size_selection))

colorpalette <- viridis(n_levels)

color_df <- tibble(Kmer_size_selection = unique(kec_df$Kmer_size_selection),
                   Colors = colorpalette)

kec_df <- kec_df%>%
  left_join(color_df, by = "Kmer_size_selection")
```

# Introduction

This report has been generated during the [Multi_KEC snakemake pipeline](https://github.com/NicolasPoncelet/Multi_KEC). 

![Rulegraph of multimap pipeline](../../../Multi_KEC/assets/rulegraph.png)


# Input Data Overview

The reference FASTA files used in this analysis are listed in the table below:

```{r,reference_table}
df_reference%>%
kbl()%>%
kable_styling("striped")
```


# Kec results

The table and the barplots below show the number of unique sequences found for each combination of kmer, for the first phase, kec include and the second one, kex exclude.

```{r}

kec_df%>%
  arrange(Genus,seq_number)%>%
  select(-X,-Run,-Kmer_size_selection,-Colors)%>%
  DT::datatable(filter = 'bottom',extensions = 'Buttons',
            options = list(scrollX = TRUE,
                         dom = 'Blfrtip',
                           initComplete = JS(
                           "function(settings, json) {",
                           "$(this.api().table().header()).css({'background-color': '#446e9b','color': '#fff'});",
                           "}"),
                           buttons = c('copyHtml5', 'csvHtml5'),
                           lengthMenu = list(c(10,25,50,-1),
                                             c(10,25,50,"All"))))

```


```{r,vect_genome}

genera <- unique(kec_df$Genus)%>%
                        sort()

kec_df$Step <- factor(kec_df$Step , levels = c("Include", "Exclude"))
```


```{r,function}
#|include: false

tabs <- list()

for (i in 1:length(genera)) {
  
  genus_ylim <- max(kec_df$Kmer_size_selection) 
  
  df_genus <- kec_df %>%
    filter(Genus == genera[i]) %>%
    arrange(Kmer_size_selection)
  
  barplot_genome <- df_genus%>%
    ggplot(aes(
    x = Kmer_size_selection,
    y = seq_number,
    fill = Kmer_size_selection,
    alpha = Step
  )) +
    geom_bar(stat = "identity", position = "stack", colour = "#363737") +
    scale_fill_manual(values = unique(df_genus$Colors)) + 
    scale_alpha_manual(values = c("Include" = 0.5, "Exclude" = 0.9)) + 
    theme_light() +
    ggtitle(genera[i]) +
    ylim(0, genus_ylim) +
    theme(
      axis.text.x = element_text(angle = 45, hjust = 1, size = 10),  
      legend.position = "right"
    )+
      labs(
      title = "Number of unique sequence per KEC step", 
      y = "Sequence number", 
      x = "Kmer size selection"
    ) 
  

  genome_plot <- ggplotly(barplot_genome) 
  
  tabs[[i]] <- tagList(
    HTML(markdown::mark(text = paste0("\n### ", genera[i], " \n"))),
    genome_plot,
    HTML("<br><br>")  
  )
}

```


```{r, results='asis',fig.width=8, fig.height=8}
#|warning: false 
#|message: false

tagList(tabs)

```


Voici un tableau représentant les combinaisons de kmer gardés pour chaque genre.

```{r}
kec_best_runs%>%
  select(Genus,kmer_in,kmer_ex,seq_number)%>%
  arrange(Genus)%>%
  kbl()%>%
  kable_styling("striped")
```
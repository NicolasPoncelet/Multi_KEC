import yaml
from pathlib import Path
from script.prepare_kec_input import prepare_kec_input
from script.prepare_primer3_input import prepare_primer3_input

configfile: "config/config.yaml"

with open("config/config.yaml", "r") as infile:
    config_yaml = yaml.safe_load(infile)

GENOME_DIR = Path(config_yaml["genomes_dir"]).resolve()
OUTPUT_DIR = Path(config_yaml["analysis_dir"]).resolve()
KEC_TOOL = Path("../tools/kec-linux-x86").resolve()  

genera = [d.name for d in GENOME_DIR.iterdir() if d.is_dir()]

rule all:
    input:
        expand(f"{OUTPUT_DIR}/2_KEC_output/{{genus}}.fasta", genus=genera)

rule prepare_all_genomes:
    input:
        genomes_dir = GENOME_DIR
    output:
        done_flags = expand(f"{OUTPUT_DIR}/1_KEC_input/{{genus}}/flag.done", genus=genera)
    run:
        prepare_kec_input(
            input.genomes_dir, 
            Path(output.done_flags[0]).parent.parent  
        )

rule kec_include:
    input:
        flag = f"{OUTPUT_DIR}/1_KEC_input/{{genus}}/flag.done"
    output:
        target_files = f"{OUTPUT_DIR}/1_KEC_input/{{genus}}/target/{{genus}}.fasta"
    params:
        kec_include_settings = config_yaml["kec_include_settings"],
        master_dir = f"{OUTPUT_DIR}/1_KEC_input/{{genus}}/master",
        pool_dir = f"{OUTPUT_DIR}/1_KEC_input/{{genus}}/pool"

    shell:
        """
        {KEC_TOOL} include \
        -m {params.master_dir} \
        -p {params.pool_dir} \
        -o {output.target_files} \
        {params.kec_include_settings}
        """

rule kec_exclude:
    input:
        target = rules.kec_include.output.target_files,
    output:
        fasta_files = f"{OUTPUT_DIR}/2_KEC_output/{{genus}}.fasta"
    params:
        kec_exclude_settings = config_yaml["kec_exclude_settings"],
        non_target = f"{OUTPUT_DIR}/1_KEC_input/{{genus}}/non_target"

    shell:
        """
        {KEC_TOOL} exclude \
        -t {input.target} \
        -n {params.non_target} \
        -o {output.fasta_files} \
        {params.kec_exclude_settings}
        """

rule prepare_primer3_input:
    input:
        fasta_files =rules.kec_exclude.output
    output:
        primer3_files = f"{OUTPUT_DIR}/3_Primer3_input/{{genus}}/flag.done"
    run:
        prepare_primer3_input(
                        input.fasta_files,
                        Path(output.primer3_files).parent)

rule primer3:
    input:
        
    output:

    params:

    conda:
        "envs/primer3.yaml"

    shell:
        """
        primer3_core < input.txt > output.txt
        """
